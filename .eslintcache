[{"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\index.js":"1","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\App.js":"2","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Context\\AuthContext.js":"3","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Auth\\index.js":"4","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedInRoute.js":"5","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedOutRoute.js":"6","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Home\\index.js":"7","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Navbar\\index.js":"8","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\RightPanel\\index.js":"9","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\PostCard\\index.js":"10","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Profile\\index.js":"11"},{"size":219,"mtime":1611590672378,"results":"12","hashOfConfig":"13"},{"size":963,"mtime":1612111224006,"results":"14","hashOfConfig":"13"},{"size":964,"mtime":1611590805868,"results":"15","hashOfConfig":"13"},{"size":4381,"mtime":1611680397839,"results":"16","hashOfConfig":"13"},{"size":476,"mtime":1611759242115,"results":"17","hashOfConfig":"13"},{"size":472,"mtime":1611590865015,"results":"18","hashOfConfig":"13"},{"size":2024,"mtime":1612109101865,"results":"19","hashOfConfig":"13"},{"size":1113,"mtime":1612111130623,"results":"20","hashOfConfig":"13"},{"size":2177,"mtime":1612166459932,"results":"21","hashOfConfig":"13"},{"size":2157,"mtime":1612110750594,"results":"22","hashOfConfig":"13"},{"size":2591,"mtime":1612166988139,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lfv35r",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\index.js",[],["51","52"],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\App.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Context\\AuthContext.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Auth\\index.js",["53","54"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Auth = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const { updateToken, token } = useContext(AuthContext);\r\n\r\n  const GOOGLE_SIGNIN_URL = \"http://localhost:5000/auth/google\";\r\n  const EMAIL_AUTH_URL = \"http://localhost:5000/auth\";\r\n\r\n  useEffect(() => {\r\n    console.log(props.location);\r\n    const { token, error } = queryString.parse(props.location.search);\r\n    if (token) {\r\n      updateToken(token);\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error) alert(error);\r\n  }, [props.location, props.history]);\r\n\r\n  const toggleSignUp = () => {\r\n    setIsSignup((prev) => (prev = !prev));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (e.target.length === 3) {\r\n      //LOGIN\r\n      let loginDetails = {\r\n        email: e.target[0].value,\r\n        password: e.target[1].value,\r\n      };\r\n      console.log(loginDetails);\r\n      const { data } = await axios.post(\r\n        `${EMAIL_AUTH_URL}/email/login`,\r\n        loginDetails\r\n      );\r\n      if (data.token) updateToken(data.token);\r\n      if (data.error) alert(data.                                   error);\r\n    } else {\r\n      // SIGNUP\r\n      if (e.target[3].value !== e.target[4].value) {\r\n        alert(\"Password and Confirm Password Do Not Match\");\r\n      } else {\r\n        let SignupDetails = {\r\n          displayName: `${e.target[0].value} ${e.target[1].value}`,\r\n          image: `https://ui-avatars.com/api/?name=${e.target[0].value}+${e.target[1].value}`,\r\n          firstName: e.target[0].value,\r\n          lastName: e.target[1].value,\r\n          email: e.target[2].value,\r\n          password: e.target[3].value,\r\n          cpassword: e.target[4].value,\r\n        };\r\n        console.log(SignupDetails);\r\n        const { data } = await axios.post(\r\n          `${EMAIL_AUTH_URL}/email/signup`,\r\n          SignupDetails\r\n        );\r\n        if (data.token) updateToken(data.token);\r\n        if (data.error) alert(data.error);\r\n      }\r\n    }\r\n    console.log(token);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth__container\">\r\n      <form className=\"auth__form\" onSubmit={handleSubmit}>\r\n        <h1>Aspire</h1>\r\n        {isSignup && (\r\n          <>\r\n            <div className=\"auth__formSameBlock\">\r\n              <div className=\"auth__formBlock\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"Enter First Name\"\r\n                  required\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              <div className=\"auth__formBlock\">\r\n                <label htmlFor=\"LastName\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"auth__formBlock\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required />\r\n        </div>\r\n        <div className=\"auth__formBlock\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n          />\r\n        </div>\r\n        {isSignup && (\r\n          <div className=\"auth__formBlock\">\r\n            <label htmlFor=\"cpassword\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"cpassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <input type=\"submit\" value={isSignup ? \"Sign Up\" : \"Login\"} />\r\n        <p onClick={toggleSignUp}>\r\n          {isSignup ? \"Already Have an Account?\" : \"Don't Have an Account?\"}\r\n        </p>\r\n        <h6>Or</h6>\r\n        <a href={GOOGLE_SIGNIN_URL} className=\"auth__googleSignin\">\r\n          <i className=\"fab fa-google\"></i>Signin With Google\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedInRoute.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedOutRoute.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Home\\index.js",["55","56"],"import axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\n\r\nimport Navbar from \"../Navbar\";\r\nimport PostCard from \"../PostCard\";\r\nimport RightPanel from \"../RightPanel\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { user, token } = useContext(AuthContext);\r\n\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/posts`, {\r\n      headers: { token: token },\r\n    });\r\n    if (data.error) setPosts(data.error);\r\n    if (data.posts) setPosts(data.posts);\r\n    console.log(data.posts);\r\n  }, [token]);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/posts/${search}`,\r\n      {\r\n        headers: {\r\n          token: token,\r\n        },\r\n      }\r\n    );\r\n    if (data.posts) setPosts(data.posts);\r\n    if (data.error) alert(data.error);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home__container\">\r\n      <Navbar handleSearch={handleSearch} setSearch={setSearch} />\r\n      <div className=\"home__main\">\r\n        <div className=\"home__section\">\r\n          {posts\r\n            ? posts.error\r\n              ? posts\r\n              : posts.map((post) => (\r\n                  <PostCard\r\n                    title={post.title}\r\n                    description={post.resource}\r\n                    date={new Date(post.createdAt).toLocaleString()}\r\n                    tags={post.tags}\r\n                    author={post.author}\r\n                    image={post.image}\r\n                    comments={post.comments}\r\n                    upvotes={post.upvotes}\r\n                    links={post.links}\r\n                    userId={post.userId}\r\n                  />\r\n                ))\r\n            : \"Loading...\"}\r\n        </div>\r\n        <RightPanel />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Navbar\\index.js",["57","58"],"import axios from \"axios\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Navbar = ({ setSearch, handleSearch }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const handleChange = (e) => setSearch(e.target.value);\r\n\r\n  return (\r\n    <div className=\"navbar__container\">\r\n      <div className=\"navbar__logo\">\r\n        <Link to=\"/\">\r\n          <h1>Aspire</h1>\r\n        </Link>\r\n      </div>\r\n      <form className=\"navbar__search\" onSubmit={handleSearch}>\r\n        <input type=\"text\" onChange={handleChange} placeholder=\"Search tags\" />\r\n        <i type=\"submit\" className=\"fas fa-search\" onClick={handleSearch}></i>\r\n      </form>\r\n      <div className=\"navbar__links\">\r\n        <ul>\r\n          <Link to=\"/\">\r\n            <li>Home</li>\r\n          </Link>\r\n          <Link to=\"/profile\">\r\n            <img src={user?.image} alt=\"\" />\r\n            <li>{user?.displayName}</li>\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\RightPanel\\index.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\PostCard\\index.js",["59","60"],"import Microlink from \"@microlink/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst PostCard = ({\r\n  title,\r\n  description,\r\n  date,\r\n  tags,\r\n  author,\r\n  image,\r\n  userId,\r\n  links,\r\n}) => {\r\n  const [resourceUpdated, setResourceUpdated] = useState(\"\");\r\n  useEffect(() => {\r\n    let parts = description.split(\r\n      /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi\r\n    );\r\n    parts = parts.filter((part) => part !== \"https\");\r\n    for (let i = 1; i < parts.length; i += 2)\r\n      parts[i] = (\r\n        <a href={parts[i]} target=\"_blank\" rel=\"noreferrer\">\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    setResourceUpdated(parts);\r\n  }, [description]);\r\n\r\n  const randomColorCode = () => `hsla(${Math.random() * 360}, 100%, 85%, 1)`;\r\n  return (\r\n    <div className=\"postcard__container\">\r\n      <div className=\"postcard__main\">\r\n        <div className=\"postcard__top\">\r\n          <div className=\"postcard__left\">\r\n            <Link to={`/account/${userId}`}>\r\n              <img src={image} alt={`${author}'s DP'`} />\r\n            </Link>\r\n            <div className=\"postcard__right\">\r\n              <div className=\"postcard__righttop\">\r\n                <h2>{title}</h2>\r\n              </div>\r\n              <div className=\"postcard__rightbottom\">\r\n                <Link to={`/account/${userId}`}>{author}</Link>\r\n                <p>{date}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"postcard__tags\">\r\n            {tags.map((tag) => (\r\n              <>\r\n                <span style={{ backgroundColor: randomColorCode() }}>\r\n                  {tag}\r\n                </span>\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"postcard__mid\">\r\n          <p>{resourceUpdated}</p>\r\n        </div>\r\n        {links && (\r\n          <div className=\"postcard__links\">\r\n            {links.map((link) => (\r\n              <Microlink url={link} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Profile\\index.js",["61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":24,"column":6,"nodeType":"70","endLine":24,"endColumn":37,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":29,"nodeType":"74","messageId":"75","endLine":44,"endColumn":74,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":14,"column":11,"nodeType":"79","messageId":"80","endLine":14,"endColumn":15},{"ruleId":"68","severity":1,"message":"81","line":16,"column":13,"nodeType":"82","endLine":23,"endColumn":4},{"ruleId":"77","severity":1,"message":"83","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"84","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":20,"column":45,"nodeType":"87","messageId":"88","endLine":20,"endColumn":46,"suggestions":"89"},{"ruleId":"85","severity":1,"message":"86","line":20,"column":72,"nodeType":"87","messageId":"88","endLine":20,"endColumn":73,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"91","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"68","severity":1,"message":"81","line":13,"column":13,"nodeType":"82","endLine":24,"endColumn":4},{"ruleId":"68","severity":1,"message":"92","line":24,"column":6,"nodeType":"70","endLine":24,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-whitespace-before-property","Unexpected whitespace before property error.","MemberExpression","unexpectedWhitespace",{"range":"97","text":"98"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'axios' is defined but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["99","100"],["101","102"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},[1299,1335],".",{"messageId":"106","fix":"107","desc":"108"},{"messageId":"109","fix":"110","desc":"111"},{"messageId":"106","fix":"112","desc":"108"},{"messageId":"109","fix":"113","desc":"111"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [props.location, props.history, updateToken]",{"range":"116","text":"117"},"removeEscape",{"range":"118","text":"119"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"120","text":"121"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"122","text":"119"},{"range":"123","text":"121"},"Update the dependencies array to be: [token]",{"range":"124","text":"125"},[724,755],"[props.location, props.history, updateToken]",[438,439],"",[438,438],"\\",[465,466],[465,465],[716,718],"[token]"]