[{"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\index.js":"1","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\App.js":"2","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Context\\AuthContext.js":"3","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Auth\\index.js":"4","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedInRoute.js":"5","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedOutRoute.js":"6","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Home\\index.js":"7","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Navbar\\index.js":"8","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\RightPanel\\index.js":"9","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\PostCard\\index.js":"10"},{"size":219,"mtime":1611590672378,"results":"11","hashOfConfig":"12"},{"size":833,"mtime":1611759045690,"results":"13","hashOfConfig":"12"},{"size":964,"mtime":1611590805868,"results":"14","hashOfConfig":"12"},{"size":4381,"mtime":1611680397839,"results":"15","hashOfConfig":"12"},{"size":476,"mtime":1611759242115,"results":"16","hashOfConfig":"12"},{"size":472,"mtime":1611590865015,"results":"17","hashOfConfig":"12"},{"size":2016,"mtime":1611846060650,"results":"18","hashOfConfig":"12"},{"size":1425,"mtime":1611766092358,"results":"19","hashOfConfig":"12"},{"size":2068,"mtime":1611818920794,"results":"20","hashOfConfig":"12"},{"size":921,"mtime":1611846367750,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lfv35r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\index.js",[],["45","46"],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\App.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Context\\AuthContext.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Auth\\index.js",["47","48"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Auth = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const { updateToken, token } = useContext(AuthContext);\r\n\r\n  const GOOGLE_SIGNIN_URL = \"http://localhost:5000/auth/google\";\r\n  const EMAIL_AUTH_URL = \"http://localhost:5000/auth\";\r\n\r\n  useEffect(() => {\r\n    console.log(props.location);\r\n    const { token, error } = queryString.parse(props.location.search);\r\n    if (token) {\r\n      updateToken(token);\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error) alert(error);\r\n  }, [props.location, props.history]);\r\n\r\n  const toggleSignUp = () => {\r\n    setIsSignup((prev) => (prev = !prev));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (e.target.length === 3) {\r\n      //LOGIN\r\n      let loginDetails = {\r\n        email: e.target[0].value,\r\n        password: e.target[1].value,\r\n      };\r\n      console.log(loginDetails);\r\n      const { data } = await axios.post(\r\n        `${EMAIL_AUTH_URL}/email/login`,\r\n        loginDetails\r\n      );\r\n      if (data.token) updateToken(data.token);\r\n      if (data.error) alert(data.                                   error);\r\n    } else {\r\n      // SIGNUP\r\n      if (e.target[3].value !== e.target[4].value) {\r\n        alert(\"Password and Confirm Password Do Not Match\");\r\n      } else {\r\n        let SignupDetails = {\r\n          displayName: `${e.target[0].value} ${e.target[1].value}`,\r\n          image: `https://ui-avatars.com/api/?name=${e.target[0].value}+${e.target[1].value}`,\r\n          firstName: e.target[0].value,\r\n          lastName: e.target[1].value,\r\n          email: e.target[2].value,\r\n          password: e.target[3].value,\r\n          cpassword: e.target[4].value,\r\n        };\r\n        console.log(SignupDetails);\r\n        const { data } = await axios.post(\r\n          `${EMAIL_AUTH_URL}/email/signup`,\r\n          SignupDetails\r\n        );\r\n        if (data.token) updateToken(data.token);\r\n        if (data.error) alert(data.error);\r\n      }\r\n    }\r\n    console.log(token);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth__container\">\r\n      <form className=\"auth__form\" onSubmit={handleSubmit}>\r\n        <h1>Aspire</h1>\r\n        {isSignup && (\r\n          <>\r\n            <div className=\"auth__formSameBlock\">\r\n              <div className=\"auth__formBlock\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"Enter First Name\"\r\n                  required\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              <div className=\"auth__formBlock\">\r\n                <label htmlFor=\"LastName\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"auth__formBlock\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required />\r\n        </div>\r\n        <div className=\"auth__formBlock\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n          />\r\n        </div>\r\n        {isSignup && (\r\n          <div className=\"auth__formBlock\">\r\n            <label htmlFor=\"cpassword\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"cpassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <input type=\"submit\" value={isSignup ? \"Sign Up\" : \"Login\"} />\r\n        <p onClick={toggleSignUp}>\r\n          {isSignup ? \"Already Have an Account?\" : \"Don't Have an Account?\"}\r\n        </p>\r\n        <h6>Or</h6>\r\n        <a href={GOOGLE_SIGNIN_URL} className=\"auth__googleSignin\">\r\n          <i className=\"fab fa-google\"></i>Signin With Google\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedInRoute.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\Routes\\LoggedOutRoute.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Home\\index.js",["49","50"],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\Navbar\\index.js",["51"],"import axios from \"axios\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Navbar = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [searchResults, setSearchResults] = useState({});\r\n  const handleSearch = async () => {\r\n    // TODO: Need to implement the route /api/v1/search/:query\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/search/${search}`\r\n    );\r\n    if (data.results) setSearchResults(data.results);\r\n    else if (data.error) alert(data.error);\r\n  };\r\n\r\n  const handleChange = (e) => setSearch(e.target.value);\r\n\r\n  return (\r\n    <div className=\"navbar__container\">\r\n      <div className=\"navbar__logo\">\r\n        <h1>Aspire</h1>\r\n      </div>\r\n      <div className=\"navbar__search\">\r\n        <input type=\"text\" onChange={handleChange} placeholder=\"Search tags\" />\r\n        <i className=\"fas fa-search\" onClick={handleSearch}></i>\r\n      </div>\r\n      <div className=\"navbar__links\">\r\n        <ul>\r\n          <Link to=\"/\">\r\n            <li>Home</li>\r\n          </Link>\r\n          <Link to=\"/profile\">\r\n            <img src={user?.image} alt=\"\" />\r\n            <li>{user?.displayName}</li>\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\RightPanel\\index.js",[],"E:\\Projects\\MERN-Stack\\Tinkerhub-HireHack\\resource-listing-client\\src\\components\\PostCard\\index.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":24,"column":6,"nodeType":"58","endLine":24,"endColumn":37,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":44,"column":29,"nodeType":"62","messageId":"63","endLine":44,"endColumn":74,"fix":"64"},{"ruleId":"65","severity":1,"message":"66","line":13,"column":11,"nodeType":"67","messageId":"68","endLine":13,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":15,"column":13,"nodeType":"70","endLine":22,"endColumn":4},{"ruleId":"65","severity":1,"message":"71","line":12,"column":10,"nodeType":"67","messageId":"68","endLine":12,"endColumn":23},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-whitespace-before-property","Unexpected whitespace before property error.","MemberExpression","unexpectedWhitespace",{"range":"75","text":"76"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'searchResults' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},[1299,1335],".","Update the dependencies array to be: [props.location, props.history, updateToken]",{"range":"79","text":"80"},[724,755],"[props.location, props.history, updateToken]"]